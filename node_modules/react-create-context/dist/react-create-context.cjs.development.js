'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);

var isServer = typeof window === 'undefined';

var useLocalStorageSync = function useLocalStorageSync(state, key) {
  React.useEffect(function () {
    if (key && !isServer) {
      window.localStorage.setItem(key, JSON.stringify(state));
    }
  }, [state, key]);
};

var getFromLocalStorage = function getFromLocalStorage(key) {
  if (!key || isServer) return null;
  var value = window.localStorage.getItem(key);
  if (value) return JSON.parse(value);
  return null;
};

var createContextStore = function createContextStore(storeReducer, initialState, key) {
  var localStorageState = getFromLocalStorage(key);
  var initialOrSavedState = localStorageState != null ? localStorageState : initialState;
  var DispatchContext = React.createContext({});
  var StoreContext = React.createContext(initialOrSavedState);

  var StoreProvider = function StoreProvider(_ref) {
    var children = _ref.children;

    var _useReducer = React.useReducer(storeReducer, initialOrSavedState),
        store = _useReducer[0],
        dispatch = _useReducer[1];

    useLocalStorageSync(store, key);
    return React__default.createElement(DispatchContext.Provider, {
      value: dispatch
    }, React__default.createElement(StoreContext.Provider, {
      value: store
    }, children));
  };

  var useDispatch = function useDispatch() {
    return React.useContext(DispatchContext);
  };

  var useStore = function useStore() {
    return React.useContext(StoreContext);
  };

  return [StoreProvider, useStore, useDispatch];
};

var createContextState = function createContextState(initialState, key) {
  var localStorageState = getFromLocalStorage(key);
  var initialOrSavedState = localStorageState != null ? localStorageState : initialState;
  var SetStateContext = React.createContext({});
  var StateContext = React.createContext(initialOrSavedState);

  var StateProvider = function StateProvider(_ref) {
    var children = _ref.children;

    var _useState = React.useState(initialOrSavedState),
        state = _useState[0],
        setState = _useState[1];

    useLocalStorageSync(state, key);
    return React__default.createElement(SetStateContext.Provider, {
      value: setState
    }, React__default.createElement(StateContext.Provider, {
      value: state
    }, children));
  };

  var useContextSetState = function useContextSetState() {
    return React.useContext(SetStateContext);
  };

  var useContextState = function useContextState() {
    return React.useContext(StateContext);
  };

  return [StateProvider, useContextState, useContextSetState];
};

exports.createContextState = createContextState;
exports.createContextStore = createContextStore;
//# sourceMappingURL=react-create-context.cjs.development.js.map
